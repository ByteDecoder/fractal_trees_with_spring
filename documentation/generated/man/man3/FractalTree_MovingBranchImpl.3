.TH "FractalTree.MovingBranchImpl" 3 "Thu Dec 15 2016" "Version 0.1" "Fractal Spring Tree Generator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
FractalTree.MovingBranchImpl \- Extends a normal branch and adds spring functionality\&. Force can be applied to the start and end point of the branch\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBFractalTree\&.StationaryBranch\fP, and \fBFractalTree\&.MovingBranch\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "override void \fBSetup\fP (\fBBranch\fP owner, Vector2 end, float thickness, Color \fBcolor\fP)"
.br
.RI "Setup the specified owner, end, thickness and color\&. Used to create a branch that is attached to another branch\&. "
.ti -1c
.RI "override void \fBSetup\fP (\fBBranch\fP owner, Vector2 end, float thickness, Color \fBcolor\fP, bool autoMass)"
.br
.RI "Setup the specified owner, end, thickness and color\&. Used to create a branch that is attached to another branch that has its mass autogenerated based on line width\&. "
.ti -1c
.RI "override void \fBSetup\fP (Vector2 start, Vector2 end, float thickness, Color \fBcolor\fP)"
.br
.RI "Setup the specified owner, end, thickness and color\&. Used to create a branch that is attached to another branch\&. "
.ti -1c
.RI "override void \fBSetup\fP (Vector2 start, Vector2 end, float width, Color \fBcolor\fP, bool autoMass)"
.br
.RI "Setup the specified owner, end, thickness and color\&. Used to create a branch that is attached to another branch that has its mass autogenerated based on line width\&. "
.ti -1c
.RI "new T \fBDoBranching< T >\fP (float angle)"
.br
.RI "Returns a new branch based on current branch angle plus parameter angle\&. "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "override void \fBAwake\fP ()"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "\fBPointMass\fP \fBstartPoint\fP\fC [get]\fP"
.br
.RI "Gets the start point mass\&. Used to add spring force "
.ti -1c
.RI "\fBPointMass\fP \fBendPoint\fP\fC [get]\fP"
.br
.RI "Gets the end point mass\&. Used to add spring force\&. "
.ti -1c
.RI "override Vector2 \fBstartPos\fP\fC [get]\fP"
.br
.RI "Gets the start position\&. "
.ti -1c
.RI "override Vector2 \fBendPos\fP\fC [get]\fP"
.br
.RI "Gets the end position\&. "
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Extends a normal branch and adds spring functionality\&. Force can be applied to the start and end point of the branch\&. 


.SH "Member Function Documentation"
.PP 
.SS "new T FractalTree\&.MovingBranchImpl\&.DoBranching< T > (float angle)"

.PP
Returns a new branch based on current branch angle plus parameter angle\&. 
.PP
\fBReturns:\fP
.RS 4
The branching\&.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIangle\fP Angle\&.
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP The 1st type parameter\&.
.RE
.PP

.PP
Implements \fBFractalTree\&.Branch\fP\&.
.PP
\fBType Constraints\fP
.TP
\fIT\fP : \fIBranch\fP
.SS "override void FractalTree\&.MovingBranchImpl\&.Setup (\fBBranch\fP owner, Vector2 end, float thickness, Color color)\fC [virtual]\fP"

.PP
Setup the specified owner, end, thickness and color\&. Used to create a branch that is attached to another branch\&. 
.PP
\fBParameters:\fP
.RS 4
\fIowner\fP The attached branch\&.
.br
\fIend\fP End\&.
.br
\fIthickness\fP Thickness\&.
.br
\fIcolor\fP Color\&.
.RE
.PP

.PP
Reimplemented from \fBFractalTree\&.StationaryBranch\fP\&.
.SS "override void FractalTree\&.MovingBranchImpl\&.Setup (\fBBranch\fP owner, Vector2 end, float thickness, Color color, bool autoMass)\fC [virtual]\fP"

.PP
Setup the specified owner, end, thickness and color\&. Used to create a branch that is attached to another branch that has its mass autogenerated based on line width\&. 
.PP
\fBParameters:\fP
.RS 4
\fIowner\fP Owner\&.
.br
\fIend\fP End\&.
.br
\fIthickness\fP Thickness\&.
.br
\fIcolor\fP Color\&.
.br
\fIautoMass\fP If set to \fCtrue\fP auto mass\&.
.RE
.PP

.PP
Reimplemented from \fBFractalTree\&.StationaryBranch\fP\&.
.SS "override void FractalTree\&.MovingBranchImpl\&.Setup (Vector2 start, Vector2 end, float thickness, Color color)\fC [virtual]\fP"

.PP
Setup the specified owner, end, thickness and color\&. Used to create a branch that is attached to another branch\&. 
.PP
\fBParameters:\fP
.RS 4
\fIowner\fP The attached branch\&.
.br
\fIend\fP End\&.
.br
\fIthickness\fP Thickness\&.
.br
\fIcolor\fP Color\&.
.br
\fIstart\fP Start\&.
.RE
.PP

.PP
Reimplemented from \fBFractalTree\&.StationaryBranch\fP\&.
.SS "override void FractalTree\&.MovingBranchImpl\&.Setup (Vector2 start, Vector2 end, float width, Color color, bool autoMass)\fC [virtual]\fP"

.PP
Setup the specified owner, end, thickness and color\&. Used to create a branch that is attached to another branch that has its mass autogenerated based on line width\&. 
.PP
\fBParameters:\fP
.RS 4
\fIowner\fP Owner\&.
.br
\fIend\fP End\&.
.br
\fIthickness\fP Thickness\&.
.br
\fIcolor\fP Color\&.
.br
\fIstart\fP Start\&.
.br
\fIwidth\fP Width\&.
.br
\fIautoMass\fP If set to \fCtrue\fP auto mass\&.
.RE
.PP

.PP
Reimplemented from \fBFractalTree\&.StationaryBranch\fP\&.
.SH "Property Documentation"
.PP 
.SS "\fBPointMass\fP FractalTree\&.MovingBranchImpl\&.endPoint\fC [get]\fP"

.PP
Gets the end point mass\&. Used to add spring force\&. The end point\&.
.SS "override Vector2 FractalTree\&.MovingBranchImpl\&.endPos\fC [get]\fP"

.PP
Gets the end position\&. The end position\&.
.SS "\fBPointMass\fP FractalTree\&.MovingBranchImpl\&.startPoint\fC [get]\fP"

.PP
Gets the start point mass\&. Used to add spring force The start point\&.
.SS "override Vector2 FractalTree\&.MovingBranchImpl\&.startPos\fC [get]\fP"

.PP
Gets the start position\&. The start position\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Fractal Spring Tree Generator from the source code\&.
