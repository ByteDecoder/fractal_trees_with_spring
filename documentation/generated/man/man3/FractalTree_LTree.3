.TH "FractalTree.LTree" 3 "Thu Dec 15 2016" "Version 0.1" "Fractal Spring Tree Generator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
FractalTree.LTree \- Spawns a fractal true using the L-system: http://www.allenpike.com/modeling-plants-with-l-systems/  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBFractalTree\&.Tree\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBLTree\fP (GameObject branchPrefab, int steps, string axiom, \fBLRule\fP[] rules, float initialLength, float angle, Transform owner, Color[] colors, float width, bool autoWidth, bool autoMass)"
.br
.RI "Initializes a new instance of the \fBFractalTree\&.LTree\fP class\&. "
.ti -1c
.RI "List< T > \fBGenerate< T >\fP ()"
.br
.RI "Generates the tree\&. "
.in -1c
.SH "Detailed Description"
.PP 
Spawns a fractal true using the L-system: http://www.allenpike.com/modeling-plants-with-l-systems/ 


.SH "Constructor & Destructor Documentation"
.PP 
.SS "FractalTree\&.LTree\&.LTree (GameObject branchPrefab, int steps, string axiom, \fBLRule\fP [] rules, float initialLength, float angle, Transform owner, Color [] colors, float width, bool autoWidth, bool autoMass)"

.PP
Initializes a new instance of the \fBFractalTree\&.LTree\fP class\&. 
.PP
\fBParameters:\fP
.RS 4
\fIbranchPrefab\fP \fBBranch\fP prefab\&.
.br
\fIsteps\fP Steps\&.
.br
\fIaxiom\fP Axiom\&.
.br
\fIrules\fP Rules\&.
.br
\fIinitialLength\fP Initial length\&.
.br
\fIangle\fP Angle\&.
.br
\fIowner\fP Owner\&.
.br
\fIcolors\fP Colors\&.
.br
\fIwidth\fP Width\&.
.br
\fIautoWidth\fP If set to \fCtrue\fP auto width\&.
.br
\fIautoMass\fP If set to \fCtrue\fP auto mass\&.
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "List<T> FractalTree\&.LTree\&.Generate< T > ()"

.PP
Generates the tree\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP The 1st type parameter\&.
.RE
.PP

.PP
Implements \fBFractalTree\&.Tree\fP\&.
.PP
\fBType Constraints\fP
.TP
\fIT\fP : \fIBranch\fP


.SH "Author"
.PP 
Generated automatically by Doxygen for Fractal Spring Tree Generator from the source code\&.
